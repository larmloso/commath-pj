{"version":3,"sources":["views/main.js","views/page1.js","views/page2.js","views/page3.js","views/page4.js","views/page5.js","views/page6.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Main","navigate","useNavigate","nextPage","page","className","class","onClick","Page1","Page2","Page3","Page4","Page5","Page6","routes","path","element","App","routing","useRoutes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yLA+DeA,MA1Df,WACE,IAAMC,EAAWC,cAEXC,EAAW,SAACC,GAChBH,EAAS,IAAMG,IAGjB,OACE,6BAGE,yBAAKC,UAAU,gCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBAAf,+BAQJ,yBAAKA,UAAU,kBACb,4EAEA,yBAAKC,MAAM,cACT,4BAAQC,QAAS,WAAQJ,EAAS,qBAClCG,MAAM,0CADN,oDAIA,4BAAQC,QAAS,WAAQJ,EAAS,qBAClCG,MAAM,0CADN,+DAIE,4BAAQC,QAAS,WAAQJ,EAAS,qBACpCG,MAAM,0CADJ,kEAIA,4BAAQC,QAAS,WAAQJ,EAAS,qBACpCG,MAAM,0CADJ,oDAIA,4BAAQC,QAAS,WAAQJ,EAAS,qBACpCG,MAAM,0CADJ,gDAIA,4BAAQC,QAAS,WAAQJ,EAAS,qBACpCG,MAAM,0CADJ,qDClCGE,MAbf,WAEE,OACI,yBAAKH,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,aCQCI,MAbf,WAEE,OACI,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,aCQCK,MAbf,WAEE,OACI,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,aCQCM,MAbf,WAEE,OACI,yBAAKN,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,aCQCO,MAbf,WAEE,OACI,yBAAKP,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,aCQCQ,MAbf,WAEE,OACI,yBAAKR,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,aCuCCS,EApCA,CACX,CACIC,KAAM,IACNC,QAAS,kBAAC,EAAD,OAEb,CACID,KAAM,cACNC,QAAS,kBAAC,EAAD,OAEb,CACID,KAAM,mBACNC,QAAS,kBAAC,EAAD,OAEb,CACID,KAAM,mBACNC,QAAS,kBAAC,EAAD,OAEb,CACID,KAAM,mBACNC,QAAS,kBAAC,EAAD,OAEb,CACID,KAAM,mBACNC,QAAS,kBAAC,EAAD,OAEb,CACID,KAAM,mBACNC,QAAS,kBAAC,EAAD,OAEb,CACID,KAAM,mBACNC,QAAS,kBAAC,EAAD,QChCFC,EALH,WACV,IAAMC,EAAUC,YAAUL,GAC1B,OAAO,6BAAMI,I,OCKKE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.1ef80d59.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction Main() {\n  const navigate = useNavigate();\n\n  const nextPage = (page) => {\n    navigate(\"/\" + page);\n  }\n\n  return (\n    <div>\n\n\n      <nav className=\"navbar navbar-light bg-light\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            Computational Mathematics\n        </div>\n        \n        </div>\n      </nav>\n\n\n      <div className=\"container mt-5\">\n        <h3> เลือกบท </h3>\n\n        <div class=\"list-group\">\n          <button onClick={() => { nextPage(\"commath-pj/page1\") }} \n          class=\"list-group-item list-group-item-action\">\n            บทที่ 1 BASIC COMPUTING</button>\n\n          <button onClick={() => { nextPage(\"commath-pj/page2\") }} \n          class=\"list-group-item list-group-item-action\">\n            บทที่ 2 LINEAR ALGEBRAIC EQUATIONS</button>\n\n            <button onClick={() => { nextPage(\"commath-pj/page3\") }} \n          class=\"list-group-item list-group-item-action\">\n            บทที่ 3 INTERPOLATION & CURVE-FITTING</button>\n\n            <button onClick={() => { nextPage(\"commath-pj/page4\") }} \n          class=\"list-group-item list-group-item-action\">\n            บทที่ 4 DIFFERENTIATION</button>\n\n            <button onClick={() => { nextPage(\"commath-pj/page5\") }} \n          class=\"list-group-item list-group-item-action\">\n            บทที่ 5 INTEGRATION</button>\n\n            <button onClick={() => { nextPage(\"commath-pj/page6\") }} \n          class=\"list-group-item list-group-item-action\">\n            บทที่ 6 ROOT-FINDING</button>\n\n\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default Main;\n","import React  from \"react\";\nimport \"../App.css\";\n\nfunction Page1() {\n\n  return (\n      <div className=\"container mt-5\">\n          <div className=\"row\">\n              <div className=\"col-md-4\">\n                page 1\n              </div>\n            </div>\n    </div>\n  );\n}\n\nexport default Page1;","import React  from \"react\";\nimport \"../App.css\";\n\nfunction Page2() {\n\n  return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-4\">\n                page 2\n              </div>\n            </div>\n    </div>\n  );\n}\n\nexport default Page2;","import React  from \"react\";\nimport \"../App.css\";\n\nfunction Page3() {\n\n  return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-4\">\n                page 3\n              </div>\n            </div>\n    </div>\n  );\n}\n\nexport default Page3;","import React  from \"react\";\nimport \"../App.css\";\n\nfunction Page4() {\n\n  return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-4\">\n                page 4\n              </div>\n            </div>\n    </div>\n  );\n}\n\nexport default Page4;","import React  from \"react\";\nimport \"../App.css\";\n\nfunction Page5() {\n\n  return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-4\">\n                page 5\n              </div>\n            </div>\n    </div>\n  );\n}\n\nexport default Page5;","import React  from \"react\";\nimport \"../App.css\";\n\nfunction Page6() {\n\n  return (\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-md-4\">\n                page 6\n              </div>\n            </div>\n    </div>\n  );\n}\n\nexport default Page6;","import React from \"react\";\n// import { Navigate } from 'react-router-dom';\nimport Main from \"./views/main\";\nimport Page1 from './views/page1';\nimport Page2 from './views/page2';\nimport Page3 from './views/page3';\nimport Page4 from './views/page4';\nimport Page5 from './views/page5';\nimport Page6 from './views/page6';\n\n\nconst routes = [\n    {\n        path: \"/\",\n        element: <Main />,\n    },\n    {\n        path: \"/commath-pj\",\n        element: <Main />,\n    },\n    {\n        path: \"commath-pj/page1\",\n        element: <Page1 />,\n    },\n    {\n        path: \"commath-pj/page2\",\n        element: <Page2 />,\n    },\n    {\n        path: \"commath-pj/page3\",\n        element: <Page3 />,\n    },\n    {\n        path: \"commath-pj/page4\",\n        element: <Page4 />,\n    },\n    {\n        path: \"commath-pj/page5\",\n        element: <Page5 />,\n    },\n    {\n        path: \"commath-pj/page6\",\n        element: <Page6 />,\n    },\n\n];\n\nexport default routes;","import React from \"react\";\nimport \"./App.css\";\nimport routes from \"./routes\";\nimport { useRoutes } from \"react-router-dom\";\n\nconst App = () => {\n  const routing = useRoutes(routes);\n  return <div>{routing}</div>;\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}